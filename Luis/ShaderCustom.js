"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var Test;
(function (Test) {
    var fudge = FudgeCore;
    let ShaderCustom = class ShaderCustom extends fudge.Shader {
    };
    ShaderCustom.vertexShaderSource = fudge.SHADER_MODULE.HEAD_VERT
        + fudge.SHADER_MODULE.LIGHTS
        + fudge.SHADER_MODULE.MATRIX_WORLD
        + fudge.SHADER_MODULE.MATRIX_PROJECTION
        + fudge.SHADER_MODULE.NORMAL_FACE
        + fudge.SHADER_MODULE.COLOR_OUT_FLAT
        + fudge.SHADER_MODULE.FLAT_VERT_MAIN;
    ShaderCustom.fragmentShaderSource = fudge.SHADER_MODULE.HEAD_FRAG
        + fudge.SHADER_MODULE.COLOR_U
        + fudge.SHADER_MODULE.COLOR_IN_FLAT
        + fudge.SHADER_MODULE.FRAG_OUT
        + fudge.SHADER_MODULE.BASIC_FRAG_MAIN;
    ShaderCustom = __decorate([
        fudge.RenderInjectorShader.decorate
    ], ShaderCustom);
    Test.ShaderCustom = ShaderCustom;
})(Test || (Test = {}));
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiU2hhZGVyQ3VzdG9tLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiU2hhZGVyQ3VzdG9tLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQSxJQUFVLElBQUksQ0FzQmI7QUF0QkQsV0FBVSxJQUFJO0lBQ1YsSUFBTyxLQUFLLEdBQUcsU0FBUyxDQUFDO0lBR3pCLElBQXNCLFlBQVksR0FBbEMsTUFBc0IsWUFBYSxTQUFRLEtBQUssQ0FBQyxNQUFNO0tBaUJ0RCxDQUFBO0lBZmlCLCtCQUFrQixHQUM1QixLQUFLLENBQUMsYUFBYSxDQUFDLFNBQVM7VUFDM0IsS0FBSyxDQUFDLGFBQWEsQ0FBQyxNQUFNO1VBQzFCLEtBQUssQ0FBQyxhQUFhLENBQUMsWUFBWTtVQUNoQyxLQUFLLENBQUMsYUFBYSxDQUFDLGlCQUFpQjtVQUNyQyxLQUFLLENBQUMsYUFBYSxDQUFDLFdBQVc7VUFDL0IsS0FBSyxDQUFDLGFBQWEsQ0FBQyxjQUFjO1VBQ2xDLEtBQUssQ0FBQyxhQUFhLENBQUMsY0FBYyxDQUFDO0lBRTNCLGlDQUFvQixHQUM5QixLQUFLLENBQUMsYUFBYSxDQUFDLFNBQVM7VUFDM0IsS0FBSyxDQUFDLGFBQWEsQ0FBQyxPQUFPO1VBQzNCLEtBQUssQ0FBQyxhQUFhLENBQUMsYUFBYTtVQUNqQyxLQUFLLENBQUMsYUFBYSxDQUFDLFFBQVE7VUFDNUIsS0FBSyxDQUFDLGFBQWEsQ0FBQyxlQUFlLENBQUM7SUFoQnhCLFlBQVk7UUFEakMsS0FBSyxDQUFDLG9CQUFvQixDQUFDLFFBQVE7T0FDZCxZQUFZLENBaUJqQztJQWpCcUIsaUJBQVksZUFpQmpDLENBQUE7QUFDTCxDQUFDLEVBdEJTLElBQUksS0FBSixJQUFJLFFBc0JiIiwic291cmNlc0NvbnRlbnQiOlsibmFtZXNwYWNlIFRlc3Qge1xyXG4gICAgaW1wb3J0IGZ1ZGdlID0gRnVkZ2VDb3JlO1xyXG5cclxuICAgIEBmdWRnZS5SZW5kZXJJbmplY3RvclNoYWRlci5kZWNvcmF0ZVxyXG4gICAgZXhwb3J0IGFic3RyYWN0IGNsYXNzIFNoYWRlckN1c3RvbSBleHRlbmRzIGZ1ZGdlLlNoYWRlciB7XHJcblxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgdmVydGV4U2hhZGVyU291cmNlOiBzdHJpbmcgPVxyXG4gICAgICAgICAgICBmdWRnZS5TSEFERVJfTU9EVUxFLkhFQURfVkVSVFxyXG4gICAgICAgICAgICArIGZ1ZGdlLlNIQURFUl9NT0RVTEUuTElHSFRTXHJcbiAgICAgICAgICAgICsgZnVkZ2UuU0hBREVSX01PRFVMRS5NQVRSSVhfV09STERcclxuICAgICAgICAgICAgKyBmdWRnZS5TSEFERVJfTU9EVUxFLk1BVFJJWF9QUk9KRUNUSU9OXHJcbiAgICAgICAgICAgICsgZnVkZ2UuU0hBREVSX01PRFVMRS5OT1JNQUxfRkFDRVxyXG4gICAgICAgICAgICArIGZ1ZGdlLlNIQURFUl9NT0RVTEUuQ09MT1JfT1VUX0ZMQVRcclxuICAgICAgICAgICAgKyBmdWRnZS5TSEFERVJfTU9EVUxFLkZMQVRfVkVSVF9NQUlOO1xyXG4gICAgICAgIFxyXG4gICAgICAgIHB1YmxpYyBzdGF0aWMgZnJhZ21lbnRTaGFkZXJTb3VyY2U6IHN0cmluZyA9XHJcbiAgICAgICAgICAgIGZ1ZGdlLlNIQURFUl9NT0RVTEUuSEVBRF9GUkFHXHJcbiAgICAgICAgICAgICsgZnVkZ2UuU0hBREVSX01PRFVMRS5DT0xPUl9VXHJcbiAgICAgICAgICAgICsgZnVkZ2UuU0hBREVSX01PRFVMRS5DT0xPUl9JTl9GTEFUXHJcbiAgICAgICAgICAgICsgZnVkZ2UuU0hBREVSX01PRFVMRS5GUkFHX09VVFxyXG4gICAgICAgICAgICArIGZ1ZGdlLlNIQURFUl9NT0RVTEUuQkFTSUNfRlJBR19NQUlOO1xyXG4gICAgfVxyXG59Il19